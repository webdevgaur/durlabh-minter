import { useState } from "react";
import React from 'react';
import { ethers, BigNumber } from 'ethers';
import { Box, Button, Flex, Input, Text } from "@chakra-ui/react"
import spinny from '../../public/spinning-coin.gif'
import durlabhNFTs from '../artifacts/contracts/DurlabhNFTs.sol/DurlabhNFTs.json';

const durlabhNFTsAddress = '0x0872BA9783B57eD1959489d6dCb01d7b314260eb';

function MainMint({ accounts, setAccounts }) {
    const [mintAmount, setMintAmount] = useState(1); 
    const isConnected = Boolean(accounts[0]);

    async function handleMint() {
        if(window.ethereum) {
            const provider = new ethers.providers.Web3Provider(window.ethereum);
            const signer = provider.getSigner();
            const contract = new ethers.Contract(
                durlabhNFTsAddress,
                durlabhNFTs.abi,
                signer
            );
            try {
                const response = contract.mintMe(BigNumber.from(mintAmount), {
                    value: ethers.utils.parseEther((0.02 * mintAmount).toString()),
                });
                console.log('Contract response to mint:', response);
            } catch (error) {
                console.log('Error encountered:', error);
            }
        }
    }

    function handleDecrement() {
        if(mintAmount <= 1) return;
        setMintAmount(mintAmount - 1);
    }

    function handleIncrement() {
        if(mintAmount >= 3) return;
        setMintAmount(mintAmount + 1);
    }

  return (
    <Flex justify="center" align="center" height="100vh" paddingBottom="150px">
        <Box width="520px">
            <img src={spinny} className="coin" />
            <h1>Durlabh NFTs</h1>
            <p>NFTs which are one of a kind. Images generated by AI which haven't been generated before and will never be generated again.
                Each NFT represents a unique state of being as imagined by AI. Only one like this exists, and can never exist again.</p>
            {isConnected ? (
                <section>
                    <Flex align="center" justify="center">
                        <Button
                            backgroundColor="deepskyblue"
                            borderRadius="5px"
                            boxShadow="0px 2px 2px 1px #0F0F0F"
                            color="white"
                            cursor="pointer"
                            fontFamily="inherit"
                            padding="15px"
                            margin="10px"
                        onClick={handleDecrement}>-</Button>
                        <Input 
                            readOnly
                            fontFamily={"inherit"}
                            width="100px"
                            height={"40px"}
                            textAlign="center"
                            paddingLeft={"20px"}
                            marginTop="10px"
                            type="number"
                            value={mintAmount} />
                        <Button
                            backgroundColor="deepskyblue"
                            borderRadius="5px"
                            boxShadow="0px 2px 2px 1px #0F0F0F"
                            color="white"
                            cursor="pointer"
                            fontFamily="inherit"
                            padding="15px"
                            margin="10px"
                            onClick={handleIncrement}>+</Button>
                    </Flex>
                    <Button
                        backgroundColor="deepskyblue"
                        borderRadius="5px"
                        boxShadow="0px 2px 2px 1px #0F0F0F"
                        color="white"
                        cursor="pointer"
                        fontFamily="inherit"
                        padding="15px"
                        margin="10px"
                        onClick={handleMint}>Mint now!</Button>
                </section>
            ) : (
                <p>You must be connected to mint</p>
            )}
        </Box>
        
    </Flex>
  )
}

export default MainMint